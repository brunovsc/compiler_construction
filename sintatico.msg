programa: FLOAT WHILE 
##
## Ends in an error in state: 185.
##
## funcao -> tipo . ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## tipo 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: HEADER_FILE ATTRIBUTION 
##
## Ends in an error in state: 3.
##
## programa -> includes . funcoes EOF [ # ]
##
## The known suffix of the stack is as follows:
## includes 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS WHILE 
##
## Ends in an error in state: 195.
##
## funcoes -> funcao . funcoes [ EOF ]
##
## The known suffix of the stack is as follows:
## funcao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN ID SEMICOLON BREAK 
##
## Ends in an error in state: 191.
##
## funcao -> tipo ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## tipo ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER ID OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 190.
##
## funcao -> tipo ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## tipo ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER ID OPEN_PARENTHESIS CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 189.
##
## funcao -> tipo ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## tipo ID OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER ID OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 187.
##
## funcao -> tipo ID OPEN_PARENTHESIS . argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## tipo ID OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER ID WHILE 
##
## Ends in an error in state: 186.
##
## funcao -> tipo ID . OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## tipo ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS SWITCH 
##
## Ends in an error in state: 129.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS . WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 133.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 132.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao . CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 131.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS . expressao CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS WHILE WHILE 
##
## Ends in an error in state: 130.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE . OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS RETURN ID SEMICOLON BREAK 
##
## Ends in an error in state: 128.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 121.
##
## cmd_do -> DO OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DO WHILE 
##
## Ends in an error in state: 120.
##
## cmd_do -> DO . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## DO 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON LITERAL_STRING SEMICOLON RETURN ID SEMICOLON CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN ID SEMICOLON BREAK 
##
## Ends in an error in state: 154.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON LITERAL_STRING SEMICOLON RETURN ID SEMICOLON CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 153.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON LITERAL_STRING SEMICOLON RETURN ID SEMICOLON CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 152.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON LITERAL_STRING SEMICOLON RETURN ID SEMICOLON WHILE 
##
## Ends in an error in state: 151.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando . CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON LITERAL_STRING SEMICOLON SUBTRACTION 
##
## Ends in an error in state: 119.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON . comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON LITERAL_STRING WHILE 
##
## Ends in an error in state: 118.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao . SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON SEMICOLON WHILE 
##
## Ends in an error in state: 117.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON . expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib SEMICOLON 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID ATTRIBUTION ID SEMICOLON WHILE 
##
## Ends in an error in state: 116.
##
## cmd_for -> FOR OPEN_PARENTHESIS cmd_atrib . SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS cmd_atrib 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS ID WHILE 
##
## Ends in an error in state: 115.
##
## cmd_atrib -> ID . ATTRIBUTION expressao SEMICOLON [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 114.
##
## cmd_for -> FOR OPEN_PARENTHESIS . cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS FOR WHILE 
##
## Ends in an error in state: 113.
##
## cmd_for -> FOR . OPEN_PARENTHESIS cmd_atrib SEMICOLON expressao SEMICOLON comando CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## FOR 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS ID ATTRIBUTION LITERAL_STRING WHILE 
##
## Ends in an error in state: 111.
##
## cmd_atrib -> ID ATTRIBUTION expressao . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
##
## The known suffix of the stack is as follows:
## ID ATTRIBUTION expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS ID ATTRIBUTION WHILE 
##
## Ends in an error in state: 110.
##
## cmd_atrib -> ID ATTRIBUTION . expressao SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ID ATTRIBUTION 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS ID DECREMENT WHILE 
##
## Ends in an error in state: 108.
##
## cmd_decr -> ID DECREMENT . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ID DECREMENT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS ID INCREMENT WHILE 
##
## Ends in an error in state: 106.
##
## cmd_incr -> ID INCREMENT . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ID INCREMENT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS ID WHILE 
##
## Ends in an error in state: 105.
##
## cmd_atrib -> ID . ATTRIBUTION expressao SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## cmd_decr -> ID . DECREMENT SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## cmd_incr -> ID . INCREMENT SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS ELSE OPEN_CURLED_BRACKETS RETURN ID SEMICOLON BREAK 
##
## Ends in an error in state: 160.
##
## elsee -> ELSE OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ELSE OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS ELSE OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 159.
##
## elsee -> ELSE OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ELSE OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS ELSE WHILE 
##
## Ends in an error in state: 158.
##
## elsee -> ELSE . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## elsee -> ELSE . cmd_if [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## ELSE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CLOSE_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 157.
##
## cmd_if -> IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS . elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN ID SEMICOLON BREAK 
##
## Ends in an error in state: 156.
##
## cmd_if -> IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 104.
##
## cmd_if -> IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 103.
##
## cmd_if -> IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## IF OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 102.
##
## cmd_if -> IF OPEN_PARENTHESIS expressao . CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## IF OPEN_PARENTHESIS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 101.
##
## cmd_if -> IF OPEN_PARENTHESIS . expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## IF OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS IF WHILE 
##
## Ends in an error in state: 100.
##
## cmd_if -> IF . OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS elsee [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## IF 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS INTEGER ID ATTRIBUTION LITERAL_STRING WHILE 
##
## Ends in an error in state: 125.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## inicial -> ATTRIBUTION expressao . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ATTRIBUTION expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS INTEGER ID ATTRIBUTION WHILE 
##
## Ends in an error in state: 124.
##
## inicial -> ATTRIBUTION . expressao [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ATTRIBUTION 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS INTEGER ID WHILE 
##
## Ends in an error in state: 123.
##
## cmd_dec -> tipo ID . inicial SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## tipo ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS INTEGER WHILE 
##
## Ends in an error in state: 122.
##
## cmd_dec -> tipo . ID inicial SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## tipo 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS PRINTF OPEN_PARENTHESIS CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 98.
##
## cmd_printf -> PRINTF OPEN_PARENTHESIS args CLOSE_PARENTHESIS . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## PRINTF OPEN_PARENTHESIS args CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS PRINTF OPEN_PARENTHESIS LITERAL_STRING COMA LITERAL_STRING WHILE 
##
## Ends in an error in state: 64.
##
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## seqs -> seqs COMA expressao . [ COMA CLOSE_PARENTHESIS ]
##
## The known suffix of the stack is as follows:
## seqs COMA expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS PRINTF OPEN_PARENTHESIS LITERAL_STRING COMA WHILE 
##
## Ends in an error in state: 63.
##
## seqs -> seqs COMA . expressao [ COMA CLOSE_PARENTHESIS ]
##
## The known suffix of the stack is as follows:
## seqs COMA 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS PRINTF OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 65.
##
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA CLOSE_PARENTHESIS AND ADDITION ]
## seqs -> expressao . [ COMA CLOSE_PARENTHESIS ]
##
## The known suffix of the stack is as follows:
## expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS PRINTF OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 96.
##
## cmd_printf -> PRINTF OPEN_PARENTHESIS . args CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## PRINTF OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS PRINTF WHILE 
##
## Ends in an error in state: 95.
##
## cmd_printf -> PRINTF . OPEN_PARENTHESIS args CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## PRINTF 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN ID OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 29.
##
## chama_func -> ID OPEN_PARENTHESIS . args CLOSE_PARENTHESIS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## ID OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN ID WHILE 
##
## Ends in an error in state: 28.
##
## chama_func -> ID . OPEN_PARENTHESIS args CLOSE_PARENTHESIS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> ID . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN INTEGER ID OPEN_BRACKETS LITERAL_STRING WHILE 
##
## Ends in an error in state: 33.
##
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_BRACKETS AND ADDITION ]
## expressao -> tipo ID OPEN_BRACKETS expressao . CLOSE_BRACKETS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## tipo ID OPEN_BRACKETS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN INTEGER ID OPEN_BRACKETS WHILE 
##
## Ends in an error in state: 32.
##
## expressao -> tipo ID OPEN_BRACKETS . expressao CLOSE_BRACKETS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## tipo ID OPEN_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN INTEGER ID WHILE 
##
## Ends in an error in state: 31.
##
## expressao -> tipo ID . OPEN_BRACKETS expressao CLOSE_BRACKETS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## tipo ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN INTEGER WHILE 
##
## Ends in an error in state: 30.
##
## expressao -> tipo . ID OPEN_BRACKETS expressao CLOSE_BRACKETS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## tipo 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING ADDITION LITERAL_STRING WHILE 
##
## Ends in an error in state: 48.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao ADDITION expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao ADDITION expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING ADDITION WHILE 
##
## Ends in an error in state: 47.
##
## expressao -> expressao ADDITION . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao ADDITION 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING AND LITERAL_STRING WHILE 
##
## Ends in an error in state: 60.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao AND expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao AND expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING AND WHILE 
##
## Ends in an error in state: 59.
##
## expressao -> expressao AND . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao AND 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING DIFFERENT LITERAL_STRING WHILE 
##
## Ends in an error in state: 58.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao DIFFERENT expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao DIFFERENT expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING DIFFERENT WHILE 
##
## Ends in an error in state: 57.
##
## expressao -> expressao DIFFERENT . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao DIFFERENT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING DIVISION WHILE 
##
## Ends in an error in state: 41.
##
## expressao -> expressao DIVISION . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao DIVISION 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING EQUALS LITERAL_STRING WHILE 
##
## Ends in an error in state: 56.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao EQUALS expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao EQUALS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING EQUALS WHILE 
##
## Ends in an error in state: 55.
##
## expressao -> expressao EQUALS . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao EQUALS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING LESS_EQUAL_THAN LITERAL_STRING WHILE 
##
## Ends in an error in state: 54.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao LESS_EQUAL_THAN expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao LESS_EQUAL_THAN expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING LESS_EQUAL_THAN WHILE 
##
## Ends in an error in state: 53.
##
## expressao -> expressao LESS_EQUAL_THAN . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao LESS_EQUAL_THAN 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING LESS_THAN LITERAL_STRING WHILE 
##
## Ends in an error in state: 52.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao LESS_THAN expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao LESS_THAN expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING LESS_THAN WHILE 
##
## Ends in an error in state: 51.
##
## expressao -> expressao LESS_THAN . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao LESS_THAN 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING MODULE WHILE 
##
## Ends in an error in state: 39.
##
## expressao -> expressao MODULE . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao MODULE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING MORE_EQUAL_THAN LITERAL_STRING WHILE 
##
## Ends in an error in state: 50.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao MORE_EQUAL_THAN expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao MORE_EQUAL_THAN expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING MORE_EQUAL_THAN WHILE 
##
## Ends in an error in state: 49.
##
## expressao -> expressao MORE_EQUAL_THAN . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao MORE_EQUAL_THAN 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING MORE_THAN LITERAL_STRING WHILE 
##
## Ends in an error in state: 46.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao MORE_THAN expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao MORE_THAN expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING MORE_THAN WHILE 
##
## Ends in an error in state: 45.
##
## expressao -> expressao MORE_THAN . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao MORE_THAN 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING MULTIPLICATION WHILE 
##
## Ends in an error in state: 36.
##
## expressao -> expressao MULTIPLICATION . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao MULTIPLICATION 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING OR LITERAL_STRING WHILE 
##
## Ends in an error in state: 44.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao OR expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao OR expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING OR WHILE 
##
## Ends in an error in state: 43.
##
## expressao -> expressao OR . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao OR 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING SEMICOLON BREAK 
##
## Ends in an error in state: 182.
##
## funcao -> INTEGER MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## INTEGER MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING SEMICOLON SEMICOLON SUBTRACTION 
##
## Ends in an error in state: 136.
##
## comandos -> comando SEMICOLON . comandos [ CLOSE_CURLED_BRACKETS BREAK ]
##
## The known suffix of the stack is as follows:
## comando SEMICOLON 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING SEMICOLON SUBTRACTION 
##
## Ends in an error in state: 135.
##
## comandos -> comando . SEMICOLON comandos [ CLOSE_CURLED_BRACKETS BREAK ]
## comandos -> comando . comandos [ CLOSE_CURLED_BRACKETS BREAK ]
##
## The known suffix of the stack is as follows:
## comando 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING SUBTRACTION LITERAL_STRING WHILE 
##
## Ends in an error in state: 35.
##
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao SUBTRACTION expressao . [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao SUBTRACTION expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING SUBTRACTION WHILE 
##
## Ends in an error in state: 34.
##
## expressao -> expressao SUBTRACTION . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## expressao SUBTRACTION 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING WHILE 
##
## Ends in an error in state: 93.
##
## cmd_return -> RETURN expressao . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
##
## The known suffix of the stack is as follows:
## RETURN expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN NOT WHILE 
##
## Ends in an error in state: 22.
##
## expressao -> NOT . expressao [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## NOT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 69.
##
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> OPEN_PARENTHESIS expressao . CLOSE_PARENTHESIS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## OPEN_PARENTHESIS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 21.
##
## expressao -> OPEN_PARENTHESIS . expressao CLOSE_PARENTHESIS [ SUBTRACTION SINGLE_QUOTE SEMICOLON OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA COLON CLOSE_PARENTHESIS CLOSE_BRACKETS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN WHILE 
##
## Ends in an error in state: 92.
##
## cmd_return -> RETURN . expressao SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## RETURN 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF OPEN_PARENTHESIS LITERAL_STRING COMA ADDRESS ID CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 90.
##
## cmd_scanf -> SCANF OPEN_PARENTHESIS expressao COMA ADDRESS ID CLOSE_PARENTHESIS . SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SCANF OPEN_PARENTHESIS expressao COMA ADDRESS ID CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF OPEN_PARENTHESIS LITERAL_STRING COMA ADDRESS ID WHILE 
##
## Ends in an error in state: 89.
##
## cmd_scanf -> SCANF OPEN_PARENTHESIS expressao COMA ADDRESS ID . CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SCANF OPEN_PARENTHESIS expressao COMA ADDRESS ID 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF OPEN_PARENTHESIS LITERAL_STRING COMA ADDRESS WHILE 
##
## Ends in an error in state: 88.
##
## cmd_scanf -> SCANF OPEN_PARENTHESIS expressao COMA ADDRESS . ID CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SCANF OPEN_PARENTHESIS expressao COMA ADDRESS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF OPEN_PARENTHESIS LITERAL_STRING COMA WHILE 
##
## Ends in an error in state: 87.
##
## cmd_scanf -> SCANF OPEN_PARENTHESIS expressao COMA . ADDRESS ID CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SCANF OPEN_PARENTHESIS expressao COMA 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 86.
##
## cmd_scanf -> SCANF OPEN_PARENTHESIS expressao . COMA ADDRESS ID CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COMA AND ADDITION ]
##
## The known suffix of the stack is as follows:
## SCANF OPEN_PARENTHESIS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 85.
##
## cmd_scanf -> SCANF OPEN_PARENTHESIS . expressao COMA ADDRESS ID CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SCANF OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SCANF WHILE 
##
## Ends in an error in state: 84.
##
## cmd_scanf -> SCANF . OPEN_PARENTHESIS expressao COMA ADDRESS ID CLOSE_PARENTHESIS SEMICOLON [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SCANF 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 18.
##
## funcao -> INTEGER MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## INTEGER MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE LITERAL_STRING COLON BREAK SEMICOLON WHILE 
##
## Ends in an error in state: 178.
##
## cases -> case . cases [ DEFAULT ]
##
## The known suffix of the stack is as follows:
## case 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE LITERAL_STRING COLON BREAK WHILE 
##
## Ends in an error in state: 170.
##
## case -> CASE expressao COLON comandos BREAK . SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE expressao COLON comandos BREAK 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE LITERAL_STRING COLON RETURN ID SEMICOLON CLOSE_CURLED_BRACKETS 
##
## Ends in an error in state: 169.
##
## case -> CASE expressao COLON comandos . BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE expressao COLON comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE LITERAL_STRING COLON SUBTRACTION 
##
## Ends in an error in state: 168.
##
## case -> CASE expressao COLON . comandos BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE expressao COLON 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE LITERAL_STRING WHILE 
##
## Ends in an error in state: 167.
##
## case -> CASE expressao . COLON comandos BREAK SEMICOLON [ DEFAULT CASE ]
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT COLON AND ADDITION ]
##
## The known suffix of the stack is as follows:
## CASE expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE SINGLE_QUOTE LITERAL_STRING SINGLE_QUOTE COLON BREAK WHILE 
##
## Ends in an error in state: 165.
##
## case -> CASE SINGLE_QUOTE expressao SINGLE_QUOTE COLON comandos BREAK . SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE SINGLE_QUOTE expressao SINGLE_QUOTE COLON comandos BREAK 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE SINGLE_QUOTE LITERAL_STRING SINGLE_QUOTE COLON RETURN LITERAL_STRING SEMICOLON CLOSE_CURLED_BRACKETS 
##
## Ends in an error in state: 164.
##
## case -> CASE SINGLE_QUOTE expressao SINGLE_QUOTE COLON comandos . BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE SINGLE_QUOTE expressao SINGLE_QUOTE COLON comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE SINGLE_QUOTE LITERAL_STRING SINGLE_QUOTE COLON SUBTRACTION 
##
## Ends in an error in state: 83.
##
## case -> CASE SINGLE_QUOTE expressao SINGLE_QUOTE COLON . comandos BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE SINGLE_QUOTE expressao SINGLE_QUOTE COLON 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE SINGLE_QUOTE LITERAL_STRING SINGLE_QUOTE WHILE 
##
## Ends in an error in state: 82.
##
## case -> CASE SINGLE_QUOTE expressao SINGLE_QUOTE . COLON comandos BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE SINGLE_QUOTE expressao SINGLE_QUOTE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE SINGLE_QUOTE LITERAL_STRING WHILE 
##
## Ends in an error in state: 81.
##
## case -> CASE SINGLE_QUOTE expressao . SINGLE_QUOTE COLON comandos BREAK SEMICOLON [ DEFAULT CASE ]
## expressao -> expressao . OR expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION SINGLE_QUOTE OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT AND ADDITION ]
##
## The known suffix of the stack is as follows:
## CASE SINGLE_QUOTE expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE SINGLE_QUOTE WHILE 
##
## Ends in an error in state: 80.
##
## case -> CASE SINGLE_QUOTE . expressao SINGLE_QUOTE COLON comandos BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE SINGLE_QUOTE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS CASE WHILE 
##
## Ends in an error in state: 79.
##
## case -> CASE . expressao COLON comandos BREAK SEMICOLON [ DEFAULT CASE ]
## case -> CASE . SINGLE_QUOTE expressao SINGLE_QUOTE COLON comandos BREAK SEMICOLON [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DEFAULT COLON RETURN ID SEMICOLON BREAK 
##
## Ends in an error in state: 176.
##
## cmd_switch -> SWITCH OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS cases default . CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SWITCH OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS cases default 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
## In state 175, spurious reduction of production default -> DEFAULT COLON comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DEFAULT COLON SUBTRACTION 
##
## Ends in an error in state: 174.
##
## default -> DEFAULT COLON . comandos [ CLOSE_CURLED_BRACKETS ]
##
## The known suffix of the stack is as follows:
## DEFAULT COLON 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS DEFAULT WHILE 
##
## Ends in an error in state: 173.
##
## default -> DEFAULT . COLON comandos [ CLOSE_CURLED_BRACKETS ]
##
## The known suffix of the stack is as follows:
## DEFAULT 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE 
##
## Ends in an error in state: 78.
##
## cmd_switch -> SWITCH OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS . cases default CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SWITCH OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 77.
##
## cmd_switch -> SWITCH OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS . OPEN_CURLED_BRACKETS cases default CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SWITCH OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 76.
##
## cmd_switch -> SWITCH OPEN_PARENTHESIS expressao . CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS cases default CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## SWITCH OPEN_PARENTHESIS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 75.
##
## cmd_switch -> SWITCH OPEN_PARENTHESIS . expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS cases default CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SWITCH OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SWITCH WHILE 
##
## Ends in an error in state: 74.
##
## cmd_switch -> SWITCH . OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS cases default CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## SWITCH 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS RETURN LITERAL_STRING SEMICOLON BREAK 
##
## Ends in an error in state: 180.
##
## cmd_while -> WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos . CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 135, spurious reduction of production comandos -> 
## In state 150, spurious reduction of production comandos -> comando comandos 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS SUBTRACTION 
##
## Ends in an error in state: 73.
##
## cmd_while -> WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS . comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE OPEN_PARENTHESIS LITERAL_STRING CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 72.
##
## cmd_while -> WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE OPEN_PARENTHESIS LITERAL_STRING WHILE 
##
## Ends in an error in state: 71.
##
## cmd_while -> WHILE OPEN_PARENTHESIS expressao . CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
## expressao -> expressao . OR expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . AND expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . ADDITION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . SUBTRACTION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MULTIPLICATION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIVISION expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MORE_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . LESS_EQUAL_THAN expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . EQUALS expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . DIFFERENT expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
## expressao -> expressao . MODULE expressao [ SUBTRACTION OR MULTIPLICATION MORE_THAN MORE_EQUAL_THAN MODULE LESS_THAN LESS_EQUAL_THAN EQUALS DIVISION DIFFERENT CLOSE_PARENTHESIS AND ADDITION ]
##
## The known suffix of the stack is as follows:
## WHILE OPEN_PARENTHESIS expressao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 20.
##
## cmd_while -> WHILE OPEN_PARENTHESIS . expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS WHILE WHILE 
##
## Ends in an error in state: 19.
##
## cmd_while -> WHILE . OPEN_PARENTHESIS expressao CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ WHILE SWITCH SEMICOLON SCANF RETURN PRINTF INTEGER IF ID FOR FLOAT DO CLOSE_PARENTHESIS CLOSE_CURLED_BRACKETS CHAR BREAK BOOL ]
##
## The known suffix of the stack is as follows:
## WHILE 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS CLOSE_PARENTHESIS WHILE 
##
## Ends in an error in state: 17.
##
## funcao -> INTEGER MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS . OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## INTEGER MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS INTEGER ID COMA WHILE 
##
## Ends in an error in state: 14.
##
## seq -> seq COMA . argumento [ COMA CLOSE_PARENTHESIS ]
##
## The known suffix of the stack is as follows:
## seq COMA 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS INTEGER ID WHILE 
##
## Ends in an error in state: 13.
##
## argumentos -> seq . [ CLOSE_PARENTHESIS ]
## seq -> seq . COMA argumento [ COMA CLOSE_PARENTHESIS ]
##
## The known suffix of the stack is as follows:
## seq 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS INTEGER WHILE 
##
## Ends in an error in state: 11.
##
## argumento -> tipo . ID [ COMA CLOSE_PARENTHESIS ]
##
## The known suffix of the stack is as follows:
## tipo 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN OPEN_PARENTHESIS WHILE 
##
## Ends in an error in state: 6.
##
## funcao -> INTEGER MAIN OPEN_PARENTHESIS . argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## INTEGER MAIN OPEN_PARENTHESIS 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER MAIN WHILE 
##
## Ends in an error in state: 5.
##
## funcao -> INTEGER MAIN . OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
##
## The known suffix of the stack is as follows:
## INTEGER MAIN 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: INTEGER WHILE 
##
## Ends in an error in state: 4.
##
## funcao -> INTEGER . MAIN OPEN_PARENTHESIS argumentos CLOSE_PARENTHESIS OPEN_CURLED_BRACKETS comandos CLOSE_CURLED_BRACKETS [ INTEGER FLOAT EOF CHAR BOOL ]
## tipo -> INTEGER . [ ID ]
##
## The known suffix of the stack is as follows:
## INTEGER 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: WHILE 
##
## Ends in an error in state: 0.
##
## programa' -> . programa [ # ]
##
## The known suffix of the stack is as follows:
## 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

