Nano 01

[INTEGER; ID "main"; OPEN_PARENTHESIS; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; EOF]


Nano 02

[INTEGER; ID "main"; OPEN_PARENTHESIS; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; CLOSE_CURLED_BRACKETS;
 EOF]

Nano 03

[INTEGER; ID "main"; OPEN_PARENTHESIS; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; ID "n"; ATTRIBUTION;
 LITERAL_INTEGER 1; SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]

Nano 04

[INTEGER; ID "main"; OPEN_PARENTHESIS; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; ID "n"; ATTRIBUTION;
 LITERAL_INTEGER 1; ADDITION; LITERAL_INTEGER 2; SEMICOLON;
 CLOSE_CURLED_BRACKETS; EOF]

Nano 05

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; 
 ID "n"; ATTRIBUTION; LITERAL_INTEGER 2; SEMICOLON; ID "printf";
 OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ID "n"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]


Nano 06

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; 
 ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; SUBTRACTION; LITERAL_INTEGER 2;
 SEMICOLON; ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; 
 ID "n"; CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]

Nano 07

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; 
 ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON; IF; OPEN_PARENTHESIS;
 ID "n"; EQUALS; LITERAL_INTEGER 1; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ID "n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 EOF]


Nano 08

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; 
 ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON; IF; OPEN_PARENTHESIS;
 ID "n"; EQUALS; LITERAL_INTEGER 1; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ID "n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "0";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 EOF]


Nano 09

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; SEMICOLON; 
 ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; ADDITION; LITERAL_INTEGER 1;
 DIVISION; LITERAL_INTEGER 2; SEMICOLON; IF; OPEN_PARENTHESIS; ID "n";
 EQUALS; LITERAL_INTEGER 1; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ID "n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "0";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 EOF]

Nano 10

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; COMA; ID "m";
 SEMICOLON; ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON; ID "m";
 ATTRIBUTION; LITERAL_INTEGER 2; SEMICOLON; IF; OPEN_PARENTHESIS; ID "n";
 EQUALS; ID "m"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "printf";
 OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ID "n"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; ID "printf";
 OPEN_PARENTHESIS; LITERAL_STRING "0"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; EOF]

Nano 11

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; COMA; ID "m";
 COMA; ID "x"; SEMICOLON; ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON;
 ID "m"; ATTRIBUTION; LITERAL_INTEGER 2; SEMICOLON; ID "x"; ATTRIBUTION;
 LITERAL_INTEGER 5; SEMICOLON; WHILE; OPEN_PARENTHESIS; ID "x"; MORE_THAN;
 ID "n"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "n"; ATTRIBUTION;
 ID "n"; ADDITION; ID "m"; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%d"; COMA; ID "n"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; EOF]


Nano 12

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "n"; COMA; ID "m";
 COMA; ID "x"; SEMICOLON; ID "n"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON;
 ID "m"; ATTRIBUTION; LITERAL_INTEGER 2; SEMICOLON; ID "x"; ATTRIBUTION;
 LITERAL_INTEGER 5; SEMICOLON; WHILE; OPEN_PARENTHESIS; ID "x"; MORE_THAN;
 ID "n"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS;
 ID "n"; EQUALS; ID "m"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ID "n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "0";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ID "x"; ATTRIBUTION;
 ID "x"; SUBTRACTION; LITERAL_INTEGER 1; SEMICOLON; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; EOF]

