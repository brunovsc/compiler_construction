Micro 01

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; FLOAT; ID "cel"; COMA; ID "far";
 SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING " Tabela de convers\195\163o: Celsius -> Fahrenheit\n";
 CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite a temperatura em Celsius: "; CLOSE_PARENTHESIS;
 SEMICOLON; ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%f"; COMA; ADDRESS;
 ID "cel"; CLOSE_PARENTHESIS; SEMICOLON; ID "far"; ATTRIBUTION;
 OPEN_PARENTHESIS; LITERAL_INTEGER 9; MULTIPLICATION; ID "cel"; ADDITION;
 LITERAL_INTEGER 160; CLOSE_PARENTHESIS; DIVISION; LITERAL_INTEGER 5;
 SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "A nova temperatura \195\169: %f F\n"; COMA; ID "far";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]

Micro 02

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "num1"; COMA;
 ID "num2"; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite o primeiro n\195\186mero: "; CLOSE_PARENTHESIS;
 SEMICOLON; ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "num1"; CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite o segundo n\195\186mero: "; CLOSE_PARENTHESIS;
 SEMICOLON; ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "num2"; CLOSE_PARENTHESIS; SEMICOLON; IF; OPEN_PARENTHESIS; ID "num1";
 MORE_THAN; ID "num2"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "printf";
 OPEN_PARENTHESIS;
 LITERAL_STRING "O primeiro n\195\186mero %d \195\169 maior que o segundo %d";
 COMA; ID "num1"; COMA; ID "num2"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; ID "printf";
 OPEN_PARENTHESIS;
 LITERAL_STRING "O segundo n\195\186mero %d \195\169 maior que o primeiro %d";
 COMA; ID "num2"; COMA; ID "num1"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; EOF]


Micro 03

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "numero"; SEMICOLON;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "Digite um n\195\186mero: ";
 CLOSE_PARENTHESIS; SEMICOLON; ID "scanf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%d"; COMA; ADDRESS; ID "numero"; CLOSE_PARENTHESIS;
 SEMICOLON; IF; OPEN_PARENTHESIS; ID "numero"; MORE_EQUAL_THAN;
 LITERAL_INTEGER 100; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; IF;
 OPEN_PARENTHESIS; ID "numero"; LESS_EQUAL_THAN; LITERAL_INTEGER 200;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "O n\195\186mero est\195\161 no intervalo entre 100 e 200\n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING
  "O n\195\186mero n\195\163o est\195\161 no intervalo entre 100 e 200\n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 ELSE; OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING
  "O n\195\186mero n\195\163o est\195\161 no intervalo entre 100 e 200\n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 EOF]


Micro 04

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "x"; COMA; ID "num";
 COMA; ID "intervalo"; SEMICOLON; ID "intervalo"; ATTRIBUTION;
 LITERAL_INTEGER 0; SEMICOLON; FOR; OPEN_PARENTHESIS; ID "x"; ATTRIBUTION;
 LITERAL_INTEGER 1; SEMICOLON; ID "x"; LESS_EQUAL_THAN; LITERAL_INTEGER 5;
 SEMICOLON; ID "x"; INCREMENT; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "Digite um n\195\186mero: ";
 CLOSE_PARENTHESIS; SEMICOLON; ID "scanf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%d"; COMA; ADDRESS; ID "num"; CLOSE_PARENTHESIS; SEMICOLON;
 IF; OPEN_PARENTHESIS; ID "num"; MORE_EQUAL_THAN; LITERAL_INTEGER 10;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS; ID "num";
 LESS_EQUAL_THAN; LITERAL_INTEGER 150; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "intervalo"; ATTRIBUTION; ID "intervalo"; ADDITION;
 LITERAL_INTEGER 1; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING
  "Ao total, foram digitados %d n\195\186meros no intervalo entre 10 e 150\n";
 COMA; ID "intervalo"; CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS;
 EOF]


Micro 05

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; CHAR; ID "nome"; OPEN_BRACKETS;
 LITERAL_INTEGER 15; CLOSE_BRACKETS; SEMICOLON; CHAR; ID "sexo"; SEMICOLON;
 CHAR; ID "newLine"; SEMICOLON; INTEGER; ID "x"; COMA; ID "h"; COMA; 
 ID "m"; SEMICOLON; ID "h"; ATTRIBUTION; LITERAL_INTEGER 0; SEMICOLON;
 ID "m"; ATTRIBUTION; LITERAL_INTEGER 0; SEMICOLON; FOR; OPEN_PARENTHESIS;
 ID "x"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON; ID "x"; LESS_EQUAL_THAN;
 LITERAL_INTEGER 5; SEMICOLON; ID "x"; INCREMENT; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite o nome: "; CLOSE_PARENTHESIS; SEMICOLON; ID "scanf";
 OPEN_PARENTHESIS; LITERAL_STRING "%s"; COMA; ID "nome"; CLOSE_PARENTHESIS;
 SEMICOLON; ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%c"; COMA; ADDRESS;
 ID "newLine"; CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "H - Homem ou M - Mulher: "; CLOSE_PARENTHESIS; SEMICOLON;
 ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%c"; COMA; ADDRESS; ID "sexo";
 CLOSE_PARENTHESIS; SEMICOLON; ID "scanf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%c"; COMA; ADDRESS; ID "newLine"; CLOSE_PARENTHESIS;
 SEMICOLON; SWITCH; OPEN_PARENTHESIS; ID "sexo"; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; CASE; LITERAL_CHAR 'H'; COLON; ID "h"; ATTRIBUTION;
 ID "h"; ADDITION; LITERAL_INTEGER 1; SEMICOLON; BREAK; SEMICOLON; CASE;
 LITERAL_CHAR 'M'; COLON; ID "m"; ATTRIBUTION; ID "m"; ADDITION;
 LITERAL_INTEGER 1; SEMICOLON; BREAK; SEMICOLON; DEFAULT; COLON; ID "printf";
 OPEN_PARENTHESIS; LITERAL_STRING "Sexo s\195\179 pode ser H ou M!\n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "Foram inseridos %d Homens\n";
 COMA; ID "h"; CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Foram inseridos %d Mulheres\n"; COMA; ID "m";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]


Micro 06

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "numero"; SEMICOLON;
 ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite um n\195\186mero de 1 a 5: "; CLOSE_PARENTHESIS;
 SEMICOLON; ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; SWITCH; OPEN_PARENTHESIS;
 ID "numero"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; CASE;
 LITERAL_INTEGER 1; COLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Um\n"; CLOSE_PARENTHESIS; SEMICOLON; BREAK; SEMICOLON; CASE;
 LITERAL_INTEGER 2; COLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Dois\n"; CLOSE_PARENTHESIS; SEMICOLON; BREAK; SEMICOLON;
 CASE; LITERAL_INTEGER 3; COLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Tr\195\170s\n"; CLOSE_PARENTHESIS; SEMICOLON; BREAK;
 SEMICOLON; CASE; LITERAL_INTEGER 4; COLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Quatro\n"; CLOSE_PARENTHESIS; SEMICOLON; BREAK; SEMICOLON;
 CASE; LITERAL_INTEGER 5; COLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Cinco\n"; CLOSE_PARENTHESIS; SEMICOLON; BREAK; SEMICOLON;
 DEFAULT; COLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "N\195\186mero Inv\195\161lido!!!\n"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; EOF]


Micro 07

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "programa"; COMA;
 ID "numero"; SEMICOLON; CHAR; ID "opc"; SEMICOLON; ID "programa";
 ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON; WHILE; OPEN_PARENTHESIS;
 ID "programa"; EQUALS; LITERAL_INTEGER 1; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite um n\195\186mero: "; CLOSE_PARENTHESIS; SEMICOLON;
 ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; IF; OPEN_PARENTHESIS;
 ID "numero"; MORE_THAN; LITERAL_INTEGER 0; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Positivo\n"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS;
 ID "numero"; EQUALS; LITERAL_INTEGER 0; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "O n\195\186mero \195\169 igual a 0\n"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; ID "printf";
 OPEN_PARENTHESIS; LITERAL_STRING "Negativo\n"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; ID "scanf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%c"; COMA; ADDRESS; ID "opc"; CLOSE_PARENTHESIS; SEMICOLON;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "Deseja finalizar? (S/N) ";
 CLOSE_PARENTHESIS; SEMICOLON; ID "scanf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%c"; COMA; ADDRESS; ID "opc"; CLOSE_PARENTHESIS; SEMICOLON;
 IF; OPEN_PARENTHESIS; ID "opc"; EQUALS; LITERAL_CHAR 'S'; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "programa"; ATTRIBUTION; LITERAL_INTEGER 0;
 SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; EOF]


Micro 08

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "numero"; SEMICOLON;
 ID "numero"; ATTRIBUTION; LITERAL_INTEGER 1; SEMICOLON; WHILE;
 OPEN_PARENTHESIS; ID "numero"; DIFFERENT; LITERAL_INTEGER 0;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite um n\195\186mero: "; CLOSE_PARENTHESIS; SEMICOLON;
 ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; IF; OPEN_PARENTHESIS;
 ID "numero"; MORE_THAN; LITERAL_INTEGER 10; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "O n\195\186mero %d \195\169 maior que 10\n"; COMA;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "O n\195\186mero %d \195\169 menor que 10\n"; COMA;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS; EOF]


Micro 09

[INTEGER; ID "main"; OPEN_PARENTHESIS;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; FLOAT; ID "preco"; COMA;
 ID "venda"; COMA; ID "novo_preco"; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite o pre\195\167o: "; CLOSE_PARENTHESIS; SEMICOLON;
 ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%f"; COMA; ADDRESS;
 ID "preco"; CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite a venda: "; CLOSE_PARENTHESIS; SEMICOLON; ID "scanf";
 OPEN_PARENTHESIS; LITERAL_STRING "%f"; COMA; ADDRESS; ID "venda";
 CLOSE_PARENTHESIS; SEMICOLON; IF; OPEN_PARENTHESIS; ID "venda"; LESS_THAN;
 LITERAL_INTEGER 500; OR; ID "preco"; LESS_THAN; LITERAL_INTEGER 30;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "novo_preco"; ATTRIBUTION;
 ID "preco"; ADDITION; OPEN_PARENTHESIS; LITERAL_FLOAT 10.; DIVISION;
 LITERAL_INTEGER 100; MULTIPLICATION; ID "preco"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; IF;
 OPEN_PARENTHESIS; OPEN_PARENTHESIS; ID "venda"; MORE_EQUAL_THAN;
 LITERAL_INTEGER 500; AND; ID "venda"; LESS_THAN; LITERAL_INTEGER 1200;
 CLOSE_PARENTHESIS; OR; OPEN_PARENTHESIS; ID "preco"; MORE_EQUAL_THAN;
 LITERAL_INTEGER 30; AND; ID "preco"; LESS_THAN; LITERAL_INTEGER 80;
 CLOSE_PARENTHESIS; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "novo_preco";
 ATTRIBUTION; ID "preco"; ADDITION; OPEN_PARENTHESIS; LITERAL_FLOAT 15.;
 DIVISION; LITERAL_INTEGER 100; MULTIPLICATION; ID "preco";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS; ID "venda"; MORE_EQUAL_THAN;
 LITERAL_INTEGER 1200; OR; ID "preco"; MORE_EQUAL_THAN; LITERAL_INTEGER 80;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "novo_preco"; ATTRIBUTION;
 ID "preco"; SUBTRACTION; OPEN_PARENTHESIS; LITERAL_FLOAT 20.; DIVISION;
 LITERAL_INTEGER 100; MULTIPLICATION; ID "preco"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "O novo pre\195\167o \195\169 %f\n"; COMA; ID "novo_preco";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]


Micro 10

[INTEGER; ID "fatorial"; OPEN_PARENTHESIS;
 INTEGER; ID "n"; CLOSE_PARENTHESIS; SEMICOLON; INTEGER; ID "main";
 OPEN_PARENTHESIS; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER;
 ID "numero"; COMA; ID "fat"; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite um n\195\186mero: "; CLOSE_PARENTHESIS; SEMICOLON;
 ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; ID "fat"; ATTRIBUTION;
 ID "fatorial"; OPEN_PARENTHESIS; ID "numero"; CLOSE_PARENTHESIS; SEMICOLON;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "O fatorial de ";
 CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%d"; COMA; ID "numero"; CLOSE_PARENTHESIS; SEMICOLON;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING " \195\169 ";
 CLOSE_PARENTHESIS; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "%d\n"; COMA; ID "fat"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; INTEGER; ID "fatorial"; OPEN_PARENTHESIS; INTEGER;
 ID "n"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS;
 ID "n"; LESS_EQUAL_THAN; LITERAL_INTEGER 0; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; RETURN; LITERAL_INTEGER 1; SEMICOLON;
 CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; RETURN; ID "n";
 MULTIPLICATION; ID "fatorial"; OPEN_PARENTHESIS; ID "n"; SUBTRACTION;
 LITERAL_INTEGER 1; CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; EOF]

Micro 11

[INTEGER; ID "verifica"; OPEN_PARENTHESIS;
 INTEGER; ID "n"; CLOSE_PARENTHESIS; SEMICOLON; INTEGER; ID "main";
 OPEN_PARENTHESIS; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER;
 ID "numero"; COMA; ID "x"; SEMICOLON; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "Digite um n\195\186mero: "; CLOSE_PARENTHESIS; SEMICOLON;
 ID "scanf"; OPEN_PARENTHESIS; LITERAL_STRING "%d"; COMA; ADDRESS;
 ID "numero"; CLOSE_PARENTHESIS; SEMICOLON; ID "x"; ATTRIBUTION;
 ID "verifica"; OPEN_PARENTHESIS; ID "numero"; CLOSE_PARENTHESIS; SEMICOLON;
 IF; OPEN_PARENTHESIS; ID "x"; EQUALS; LITERAL_INTEGER 1; CLOSE_PARENTHESIS;
 OPEN_CURLED_BRACKETS; ID "printf"; OPEN_PARENTHESIS;
 LITERAL_STRING "N\195\186mero positivo\n"; CLOSE_PARENTHESIS; SEMICOLON;
 CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS;
 ID "x"; EQUALS; LITERAL_INTEGER 0; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS;
 ID "printf"; OPEN_PARENTHESIS; LITERAL_STRING "Zero\n"; CLOSE_PARENTHESIS;
 SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; ID "printf";
 OPEN_PARENTHESIS; LITERAL_STRING "N\195\186mero negativo\n";
 CLOSE_PARENTHESIS; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 CLOSE_CURLED_BRACKETS; INTEGER; ID "verifica"; OPEN_PARENTHESIS; INTEGER;
 ID "n"; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; INTEGER; ID "res";
 SEMICOLON; IF; OPEN_PARENTHESIS; ID "n"; MORE_THAN; LITERAL_INTEGER 0;
 CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "res"; ATTRIBUTION;
 LITERAL_INTEGER 1; SEMICOLON; CLOSE_CURLED_BRACKETS; ELSE;
 OPEN_CURLED_BRACKETS; IF; OPEN_PARENTHESIS; ID "n"; LESS_THAN;
 LITERAL_INTEGER 0; CLOSE_PARENTHESIS; OPEN_CURLED_BRACKETS; ID "res";
 ATTRIBUTION; SUBTRACTION; LITERAL_INTEGER 1; SEMICOLON;
 CLOSE_CURLED_BRACKETS; ELSE; OPEN_CURLED_BRACKETS; ID "res"; ATTRIBUTION;
 LITERAL_INTEGER 0; SEMICOLON; CLOSE_CURLED_BRACKETS; CLOSE_CURLED_BRACKETS;
 RETURN; ID "res"; SEMICOLON; CLOSE_CURLED_BRACKETS; EOF]



